// // Colors
// $brand-primary:         #dbab33;
// $body-color:            #fff;
// $body-bg:               #42436b;
// $input-bg:              $body-bg;
// $modal-content-bg:      $body-bg;
// $input-color:           $brand-primary;
// $input-border-color:    darken($brand-primary, 0.15);
// $modal-content-border-width:  0;
// //font
// $font-family-base: 'RalewayRegular';

// //extend grid
// @mixin _assert-ascending($map, $map-name) {
//   $prev-key: null;
//   $prev-num: null;
//   @each $key, $num in $map {
//     @if $prev-num == null {
//       // Do nothing
//     } @else if not comparable($prev-num, $num) {
//       @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
//     } @else if $prev-num >= $num {
//       @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
//     }
//     $prev-key: $key;
//     $prev-num: $num;
//   }
// }

// @mixin _assert-starts-at-zero($map) {
//   $values: map-values($map);
//   $first-value: nth($values, 1);
//   @if $first-value != 0 {
//     @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
//   }
// }

// $grid-breakpoints: (
//   xs: 0,
//   sm: 576px,
//   md: 768px,
//   lg: 992px,
//   xl: 1200px,
//   xxl: 1600px,
//   xxxl: 1800px,
//   xxxxl: 2000px
// ) !default;
// @include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
// @include _assert-starts-at-zero($grid-breakpoints);

// $container-max-widths: (
//   sm: 540px,
//   md: 720px,
//   lg: 960px,
//   xl: 1140px,
//   xxl: 1580px,
//   xxxl: 1680px,
//   xxxxl: 1900px
// ) !default;
// @include _assert-ascending($container-max-widths, "$container-max-widths");